# This is a basic workflow to help you get started with Actions

name: CI
run-name: "Task - ${{ inputs.superplane_execution_id }}"


permissions:
  id-token: write

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      superplane_execution_id:
        description: 'Superplane Execution ID'
        required: true
        type: string
      docker_image:
        type: string
        required: true
        description: 'my docker image'
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      #
      # These steps are required for generating an OIDC ID token to use
      # to push outputs from the workflow run to SuperPlane.
      #
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        uses: actions/github-script@v7
        id: idToken
        with:
          script: |
            let token = await core.getIDToken('superplane')
            core.setOutput('token', token)

      #
      # This step just pushes an output to SuperPlane using the ID token generated above
      # and the workflow run ID.
      #
      - run: |
          curl -s \
            https://superplane.sxmoon.com/api/v1/outputs \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $GITHUB_ID_TOKEN" \
            --data "{\"execution_id\":\"$EXECUTION_ID\",\"external_id\":\"$GITHUB_RUN_ID\",\"outputs\":{\"docker_image\":\"my_image\", \"release_version\":\"v1.1.1\"}}"
        env:
          EXECUTION_ID: ${{ inputs.superplane_execution_id }}
          GITHUB_ID_TOKEN: ${{ steps.idToken.outputs.token }}
